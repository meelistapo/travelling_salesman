buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
		classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
	}
}




apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'

mainClassName = 'com.travelling_salesman.demo.TravellingSalesmanApplication'
group = 'com.travelling_salesman'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

node {
	version = "9.8.0"
    npmVersion = '5.7.1'
	download = true
	nodeModulesDir = file("frontend")
}

task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
	group = 'build'
	description = 'Compile client side folder for development'
	args = ['run','buildDev']
}
task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall') {
	group = 'application'
	description = "Build and watches the client side assets for rebuilding"
	args = ['run','buildWatch']
}
task buildClient(type:NpmTask, dependsOn:'npmInstall') {
	group = 'build'
	description = "Compile client side folder for production"
	args = ['run','build']
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

bootRun.dependsOn(buildClientDev)
jar.dependsOn(buildClient)

shadowJar {
	baseName = 'travelling_salesman'
	classifier = null
	version = null
	mergeServiceFiles()
	exclude 'META-INF/*.DSA'
	exclude 'META-INF/*.RSA'
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
	}
}